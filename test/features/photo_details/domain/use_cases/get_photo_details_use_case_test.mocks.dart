// Mocks generated by Mockito 5.3.0 from annotations
// in greisy_photos/test/features/photo_details/domain/use_cases/get_photo_details_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:greisy_photos/core/error/faillure.dart' as _i5;
import 'package:greisy_photos/features/landing_page/domain/entities/photo.dart'
    as _i6;
import 'package:greisy_photos/features/photo_details/domain/repository/photo_details_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [PhotoDetailsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoDetailsRepository extends _i1.Mock
    implements _i3.PhotoDetailsRepository {
  MockPhotoDetailsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Photo>> getPhoto(String? photoId) =>
      (super.noSuchMethod(Invocation.method(#getPhoto, [photoId]),
              returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Photo>>.value(
                  _FakeEither_0<_i5.Failure, _i6.Photo>(
                      this, Invocation.method(#getPhoto, [photoId]))))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Photo>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Photo>>> getPhotos() =>
      (super.noSuchMethod(Invocation.method(#getPhotos, []),
              returnValue:
                  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Photo>>>.value(
                      _FakeEither_0<_i5.Failure, List<_i6.Photo>>(
                          this, Invocation.method(#getPhotos, []))))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Photo>>>);
}
